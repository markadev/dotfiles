#!/usr/bin/env python3

import argparse
import random


# Character sets, but with ambiguous characters removed
# (like 1/l/I, 0/O, etc.)
UNAMBIGUOUS_LOWERCASE = 'abcdefghijkmnopqrstuvwxyz'
UNAMBIGUOUS_UPPERCASE = 'ABCDEFGHJKLMNPQRSTUVWXYZ'
UNAMBIGUOUS_DIGITS = '23456789'
UNAMBIGUOUS_PUNCTUATION = '~!@#$%^&*()-=+,./<>?;:[]{}'


def generate_password(length, with_punctuation=True):
    """Generate a random password"""

    assert length >= 0, 'length must be positive'

    # We want at least 1 chars from each char set
    rand = random.SystemRandom()
    chars = [
        rand.choice(UNAMBIGUOUS_LOWERCASE),
        rand.choice(UNAMBIGUOUS_UPPERCASE),
        rand.choice(UNAMBIGUOUS_DIGITS),
    ]
    if with_punctuation:
        chars.append(rand.choice(UNAMBIGUOUS_PUNCTUATION))

    if length > len(chars):
        # Add more characters to meet the length
        full_char_set = UNAMBIGUOUS_LOWERCASE + \
            UNAMBIGUOUS_UPPERCASE + UNAMBIGUOUS_DIGITS
        if with_punctuation:
            full_char_set += UNAMBIGUOUS_PUNCTUATION

        chars += [rand.choice(full_char_set)
                  for _ in range(length - len(chars))]

    rand.shuffle(chars)
    return ''.join(chars[0:length])


def _parse_args():
    parser = argparse.ArgumentParser(description='Generate a random password')
    parser.add_argument('--length', '-l', type=int, default=10,
        help='Length of the password to generate')
    parser.add_argument('--no-punct', action='store_true',
        help='Disable use of puncuation characters')

    return parser.parse_args()


if __name__ == "__main__":
    args = _parse_args()
    print(generate_password(
        args.length,
        with_punctuation=not args.no_punct))


# vim:set ts=4 sw=4 expandtab:
